What happens when you initialize a repository? Why do you need to do it?

	The metadata required for the repository is created under the hidden directory '.git'. This metadata is the information that git used to store the commit done in the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is a set of files that you want to commit as a whole to the repository. All the files included in the staging area are in the working directory. Only a few/or one file/s of the working directory are included in the staging area.

	The value that offer the staging area is to commit more than one file in the same commit.

How can you use the staging area to make sure you have one commit per logical change?

	Only adding to the staging area the files that you need to include for that logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you need to maintain different versions of the software. Maybe the versions would be temporary version just for test purposes or experimental changes. Branches help to manage different versions of the Software. There is a main line of development associated to the master branch and it could be others different branches for other purposes.
	
How do the diagrams help you visualize the branch structure?

	The diagrams are the best way to visualize the branches and the commits done. Each 'ball' is a commit and the commits are connected with arrows which connect each commit with his parent.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The result is the merged of the commits from both branches. Because the 'merge commit' has two parents, the last commits of the two branches that have been merged.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	For me the main difference is: the automatic merging is much quicker and less error-prone than the manual merging. Maybe a cons against the automatic merging is that it cannot be used if the code of the different branches are coded with different styles of codification.
